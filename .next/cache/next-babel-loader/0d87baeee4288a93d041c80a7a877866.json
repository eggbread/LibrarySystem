{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gyeongmin\\\\LibrarySystem\\\\pages\\\\Header.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Navbar, Image, InputGroup, Nav, Form, Modal, Col } from \"react-bootstrap\";\nimport { useState, useReducer, useRef } from \"react\";\nimport useData from \"./hooks/headerHook\";\nimport axios from \"axios\";\n\nvar Header = function Header() {\n  var _useData = useData(\"modal\"),\n      _useData2 = _slicedToArray(_useData, 2),\n      modal = _useData2[0],\n      dispatchModal = _useData2[1];\n\n  var _useData3 = useData(\"signin\"),\n      _useData4 = _slicedToArray(_useData3, 2),\n      SI = _useData4[0],\n      dispatchSI = _useData4[1];\n\n  var _useData5 = useData(\"signup\"),\n      _useData6 = _slicedToArray(_useData5, 2),\n      SU = _useData6[0],\n      dispatchSU = _useData6[1];\n\n  var _useData7 = useData(\"isLogin\"),\n      _useData8 = _slicedToArray(_useData7, 2),\n      isLogin = _useData8[0],\n      setLogin = _useData8[1];\n\n  var _useState = useState(false),\n      validated = _useState[0],\n      setValidated = _useState[1];\n\n  var _useData9 = useData(\"userdata\"),\n      _useData10 = _slicedToArray(_useData9, 2),\n      userData = _useData10[0],\n      dispatchUserData = _useData10[1];\n\n  var SignIn =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(userId, userPw) {\n      var check;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post(\"http://localhost:4000/signin\", {\n                userId: userId,\n                userPw: userPw\n              });\n\n            case 2:\n              check = _context.sent;\n\n              if (!check.data) {\n                alert(\"Login Fault\");\n              } else {\n                setLogin(check.data);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function SignIn(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(event) {\n      var form, data, check;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(event.target.value);\n              form = event.currentTarget;\n\n              if (!(form.checkValidity() === false)) {\n                _context2.next = 7;\n                break;\n              }\n\n              event.preventDefault();\n              event.stopPropagation();\n              _context2.next = 12;\n              break;\n\n            case 7:\n              data = SU;\n              console.log(data);\n              _context2.next = 11;\n              return axios.post(\"http://localhost:4000/signup\", {\n                userId: data.userId,\n                userPw: data.userPw,\n                userName: data.userName,\n                userEmail: data.userEmail,\n                userPhone: data.userPhone,\n                userJob: data.userJob\n              });\n\n            case 11:\n              check = _context2.sent;\n\n            case 12:\n              setValidated(true);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSubmit(_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var SignUp =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(data) {\n      var check;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.post(\"http://localhost:4000/signup\", {\n                userId: data.userId,\n                userPw: data.userPw,\n                userName: data.userName,\n                userEmail: data.userEmail,\n                userPhone: data.userPhone,\n                userJob: data.userJob\n              });\n\n            case 2:\n              check = _context3.sent;\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function SignUp(_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var loginBtn;\n\n  if (!isLogin) {\n    loginBtn = __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(Button, {\n      style: {\n        margin: \"0 10px\"\n      },\n      variant: \"dark\",\n      onClick: function onClick() {\n        return dispatchModal(\"openSI\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Sign in\"), __jsx(Button, {\n      variant: \"dark\",\n      onClick: function onClick() {\n        return dispatchModal(\"openSU\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Sign up\"));\n  } else {\n    loginBtn = __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, isLogin + \"'s\"), __jsx(Button, {\n      variant: \"dark\",\n      onClick:\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var check;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.post(\"http://localhost:4000/mypage\", {// userId: data.userId,\n                  // userPw: data.userPw,\n                  // userName: data.userName,\n                  // userEmail: data.userEmail,\n                  // userPhone: data.userPhone,\n                  // userJob: data.userJob\n                });\n\n              case 2:\n                check = _context4.sent;\n\n                if (check.data) {\n                  dispatchUserData({\n                    type: \"setName\",\n                    userName: check.data\n                  });\n                  dispatchUserData({\n                    type: \"setJob\",\n                    userJob: \"Master\"\n                  });\n                  dispatchModal(\"openMP\");\n                } else {\n                  alert(\"Can't find User data\");\n                }\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"My Page\"), __jsx(Button, {\n      variant: \"dark\",\n      onClick: function onClick() {\n        return setLogin(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Log out\"));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(Navbar.Brand, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"CNU Library\"), __jsx(Nav, {\n    className: \"mr-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(Nav.Link, {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Home\"), __jsx(Nav.Link, {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"about\"), __jsx(Nav.Link, {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Contact\")), loginBtn), __jsx(Modal, {\n    show: modal.showMP,\n    onHide: function onHide() {\n      return dispatchModal(\"hideMP\");\n    },\n    onEnter: function onEnter() {\n      console.log(userData);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"My Page\")), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustom01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"ID\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"ID\",\n    defaultValue: userData.userName,\n    onInput: function onInput(ref) {\n      return dispatchSU({\n        type: \"setId\",\n        userId: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Looks good!\")), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustom02\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Password\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"Password\",\n    defaultValue: userData.userName,\n    onInput: function onInput(ref) {\n      return dispatchSU({\n        type: \"setPw\",\n        userPw: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Looks good!\"))), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustomUsername\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Username\"), __jsx(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    required: true,\n    defaultValue: userData.userName,\n    onInput: function onInput(ref) {\n      return dispatchSU({\n        type: \"setName\",\n        userName: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Please choose a username.\"))), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustom03\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Email\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Email\",\n    required: true,\n    defaultValue: userData.userName,\n    onInput: function onInput(ref) {\n      return dispatchSU({\n        type: \"setEmail\",\n        userEmail: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"Please provide a valid city.\"))), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom04\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Phone\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Phone\",\n    required: true,\n    defaultValue: userData.userName,\n    onInput: function onInput(ref) {\n      return dispatchSU({\n        type: \"setPhone\",\n        userPhone: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"Please provide a valid state.\")), __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom05\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Job\"), __jsx(Form.Control, {\n    as: \"select\",\n    value: userData.userJob,\n    onChange: function onChange(ref) {\n      return dispatchUserData({\n        type: \"setJob\",\n        userJob: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Bachelor\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, \"Master\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Staff\")))), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      return dispatchModal(\"hideSU\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Close\"), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"Submit form\"))), __jsx(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      return dispatchModal(\"hideSI\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"Close\"), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick:\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(ref) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(SI.userId && SI.userPw)) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return SignIn(SI.userId, SI.userPw);\n\n              case 3:\n                dispatchModal(\"hideSI\");\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"Submit\"))), __jsx(Modal, {\n    show: modal.showSI,\n    onHide: function onHide() {\n      return dispatchModal(\"hideSI\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, __jsx(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \"Sign In\")), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"ID\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter ID\",\n    onInput: function onInput(ref) {\n      return dispatchSI({\n        type: \"setId\",\n        userId: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, \"Password\"), __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onInput: function onInput(ref) {\n      return dispatchSI({\n        type: \"setPw\",\n        userPw: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicCheckbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"Check me out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  })))), __jsx(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      return dispatchModal(\"hideSI\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, \"Close\"), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick:\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(ref) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(SI.userId && SI.userPw)) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                _context6.next = 3;\n                return SignIn(SI.userId, SI.userPw);\n\n              case 3:\n                dispatchModal(\"hideSI\");\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  }, \"Submit\"))), __jsx(Modal, {\n    show: modal.showSU,\n    onHide: function onHide() {\n      return dispatchModal(\"hideSU\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, __jsx(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, \"Sign Up\")), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, __jsx(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustom01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, \"ID\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"ID\",\n    onInput: function onInput(ref) {\n      return dispatchSU({\n        type: \"setId\",\n        userId: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, \"Looks good!\")), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustom02\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, \"Password\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"Password\",\n    onInput: function onInput(ref) {\n      return dispatchSU({\n        type: \"setPw\",\n        userPw: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }, \"Looks good!\"))), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustomUsername\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }, \"Username\"), __jsx(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    required: true,\n    onInput: function onInput(ref) {\n      return dispatchSU({\n        type: \"setName\",\n        userName: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, \"Please choose a username.\"))), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustom03\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, \"Email\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Email\",\n    required: true,\n    onInput: function onInput(ref) {\n      return dispatchSU({\n        type: \"setEmail\",\n        userEmail: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381\n    },\n    __self: this\n  }, \"Please provide a valid city.\"))), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom04\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, \"Phone\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Phone\",\n    required: true,\n    onInput: function onInput(ref) {\n      return dispatchSU({\n        type: \"setPhone\",\n        userPhone: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400\n    },\n    __self: this\n  }, \"Please provide a valid state.\")), __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom05\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }, \"Job\"), __jsx(Form.Control, {\n    as: \"select\",\n    onChange: function onChange(ref) {\n      return dispatchSU({\n        type: \"setJob\",\n        userJob: ref.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, \"Bachelor\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413\n    },\n    __self: this\n  }, \"Master\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414\n    },\n    __self: this\n  }, \"Staff\")))), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      return dispatchModal(\"hideSU\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }, \"Close\"), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421\n    },\n    __self: this\n  }, \"Submit form\"))), __jsx(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  })));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/gyeongmin/LibrarySystem/pages/Header.js"],"names":["Button","Navbar","Image","InputGroup","Nav","Form","Modal","Col","useState","useReducer","useRef","useData","axios","Header","modal","dispatchModal","SI","dispatchSI","SU","dispatchSU","isLogin","setLogin","validated","setValidated","userData","dispatchUserData","SignIn","userId","userPw","post","check","data","alert","handleSubmit","event","console","log","target","value","form","currentTarget","checkValidity","preventDefault","stopPropagation","userName","userEmail","userPhone","userJob","SignUp","loginBtn","margin","color","type","showMP","ref","showSI","showSU"],"mappings":";;;;;;AAAA,SACEA,MADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,GALF,EAMEC,IANF,EAOEC,KAPF,EAQEC,GARF,QASO,iBATP;AAUA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,iBACYF,OAAO,CAAC,OAAD,CADnB;AAAA;AAAA,MACZG,KADY;AAAA,MACLC,aADK;;AAAA,kBAEMJ,OAAO,CAAC,QAAD,CAFb;AAAA;AAAA,MAEZK,EAFY;AAAA,MAERC,UAFQ;;AAAA,kBAGMN,OAAO,CAAC,QAAD,CAHb;AAAA;AAAA,MAGZO,EAHY;AAAA,MAGRC,UAHQ;;AAAA,kBAISR,OAAO,CAAC,SAAD,CAJhB;AAAA;AAAA,MAIZS,OAJY;AAAA,MAIHC,QAJG;;AAAA,kBAKeb,QAAQ,CAAC,KAAD,CALvB;AAAA,MAKZc,SALY;AAAA,MAKDC,YALC;;AAAA,kBAMiBZ,OAAO,CAAC,UAAD,CANxB;AAAA;AAAA,MAMZa,QANY;AAAA,MAMHC,gBANG;;AAQnB,MAAMC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOC,MAAP,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKhB,KAAK,CAACiB,IAAN,CAAW,8BAAX,EAA2C;AAC3DF,gBAAAA,MAAM,EAAEA,MADmD;AAE3DC,gBAAAA,MAAM,EAAEA;AAFmD,eAA3C,CADL;;AAAA;AACTE,cAAAA,KADS;;AAKb,kBAAI,CAACA,KAAK,CAACC,IAAX,EAAiB;AACfC,gBAAAA,KAAK,CAAC,aAAD,CAAL;AACD,eAFD,MAEO;AACLX,gBAAAA,QAAQ,CAACS,KAAK,CAACC,IAAP,CAAR;AACD;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANL,MAAM;AAAA;AAAA;AAAA,KAAZ;;AAYA,MAAMO,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,kBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACMC,cAAAA,IAFa,GAENL,KAAK,CAACM,aAFA;;AAAA,oBAGfD,IAAI,CAACE,aAAL,OAAyB,KAHV;AAAA;AAAA;AAAA;;AAIjBP,cAAAA,KAAK,CAACQ,cAAN;AACAR,cAAAA,KAAK,CAACS,eAAN;AALiB;AAAA;;AAAA;AAOXZ,cAAAA,IAPW,GAOJb,EAPI;AAQjBiB,cAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AARiB;AAAA,qBASCnB,KAAK,CAACiB,IAAN,CAAW,8BAAX,EAA2C;AAC3DF,gBAAAA,MAAM,EAAEI,IAAI,CAACJ,MAD8C;AAE3DC,gBAAAA,MAAM,EAAEG,IAAI,CAACH,MAF8C;AAG3DgB,gBAAAA,QAAQ,EAAEb,IAAI,CAACa,QAH4C;AAI3DC,gBAAAA,SAAS,EAAEd,IAAI,CAACc,SAJ2C;AAK3DC,gBAAAA,SAAS,EAAEf,IAAI,CAACe,SAL2C;AAM3DC,gBAAAA,OAAO,EAAEhB,IAAI,CAACgB;AAN6C,eAA3C,CATD;;AAAA;AASbjB,cAAAA,KATa;;AAAA;AAkBnBP,cAAAA,YAAY,CAAC,IAAD,CAAZ;;AAlBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZU,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAqBA,MAAMe,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,kBAAMjB,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKnB,KAAK,CAACiB,IAAN,CAAW,8BAAX,EAA2C;AAC3DF,gBAAAA,MAAM,EAAEI,IAAI,CAACJ,MAD8C;AAE3DC,gBAAAA,MAAM,EAAEG,IAAI,CAACH,MAF8C;AAG3DgB,gBAAAA,QAAQ,EAAEb,IAAI,CAACa,QAH4C;AAI3DC,gBAAAA,SAAS,EAAEd,IAAI,CAACc,SAJ2C;AAK3DC,gBAAAA,SAAS,EAAEf,IAAI,CAACe,SAL2C;AAM3DC,gBAAAA,OAAO,EAAEhB,IAAI,CAACgB;AAN6C,eAA3C,CADL;;AAAA;AACTjB,cAAAA,KADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANkB,MAAM;AAAA;AAAA;AAAA,KAAZ;;AAWA,MAAIC,QAAJ;;AACA,MAAI,CAAC7B,OAAL,EAAc;AACZ6B,IAAAA,QAAQ,GACN,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADT;AAEE,MAAA,OAAO,EAAC,MAFV;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMnC,aAAa,CAAC,QAAD,CAAnB;AAAA,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAQE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE;AAAA,eAAMA,aAAa,CAAC,QAAD,CAAnB;AAAA,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,CADF;AAcD,GAfD,MAeO;AACLkC,IAAAA,QAAQ,GACN,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC/B,OAAO,GAAG,IAAlD,CADF,EAEE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO;AAAA;AAAA;AAAA;AAAA,+BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACZR,KAAK,CAACiB,IAAN,CAAW,8BAAX,EAA2C,CAC3D;AACA;AACA;AACA;AACA;AACA;AAN2D,iBAA3C,CADY;;AAAA;AAC1BC,gBAAAA,KAD0B;;AAShC,oBAAGA,KAAK,CAACC,IAAT,EAAc;AACZN,kBAAAA,gBAAgB,CAAC;AAAE2B,oBAAAA,IAAI,EAAE,SAAR;AAAmBR,oBAAAA,QAAQ,EAAEd,KAAK,CAACC;AAAnC,mBAAD,CAAhB;AACAN,kBAAAA,gBAAgB,CAAC;AAAE2B,oBAAAA,IAAI,EAAE,QAAR;AAAkBL,oBAAAA,OAAO,EAAE;AAA3B,mBAAD,CAAhB;AACAhC,kBAAAA,aAAa,CAAC,QAAD,CAAb;AACD,iBAJD,MAIK;AACHiB,kBAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;;AAf+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAqBE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE;AAAA,eAAMX,QAAQ,CAAC,KAAD,CAAd;AAAA,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBArBF,CADF;AA2BD;;AACD,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,OAAO,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CAFF,EAOG4B,QAPH,CADF,EAWE,MAAC,KAAD;AACE,IAAA,IAAI,EAAEnC,KAAK,CAACuC,MADd;AAEE,IAAA,MAAM,EAAE;AAAA,aAAMtC,aAAa,CAAC,QAAD,CAAnB;AAAA,KAFV;AAGE,IAAA,OAAO,EAAE,mBAAI;AAACoB,MAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AAAsB,KAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CALF,EAQE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,SAAS,EAAEF,SAA5B;AAAuC,IAAA,QAAQ,EAAEW,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE1B,GAAhB;AAAqB,IAAA,SAAS,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,IAHd;AAIE,IAAA,YAAY,EAAEiB,QAAQ,CAACoB,QAJzB;AAKE,IAAA,OAAO,EAAE,iBAAAU,GAAG;AAAA,aACVnC,UAAU,CAAC;AAAEiC,QAAAA,IAAI,EAAE,OAAR;AAAiBzB,QAAAA,MAAM,EAAE2B,GAAG,CAACjB,MAAJ,CAAWC;AAApC,OAAD,CADA;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF,EAeE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,SAAS,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,YAAY,EAAEiB,QAAQ,CAACoB,QAJzB;AAKE,IAAA,OAAO,EAAE,iBAAAU,GAAG;AAAA,aACVnC,UAAU,CAAC;AAAEiC,QAAAA,IAAI,EAAE,OAAR;AAAiBxB,QAAAA,MAAM,EAAE0B,GAAG,CAACjB,MAAJ,CAAWC;AAApC,OAAD,CADA;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CAfF,CADJ,EA8BI,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,SAAS,EAAC,0BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,wBAAiB,mBAHnB;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,YAAY,EAAEiB,QAAQ,CAACoB,QALzB;AAME,IAAA,OAAO,EAAE,iBAAAU,GAAG;AAAA,aACVnC,UAAU,CAAC;AACTiC,QAAAA,IAAI,EAAE,SADG;AAETR,QAAAA,QAAQ,EAAEU,GAAG,CAACjB,MAAJ,CAAWC;AAFZ,OAAD,CADA;AAAA,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAcE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAdF,CAFF,CADF,EAsBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,SAAS,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,YAAY,EAAEiB,QAAQ,CAACoB,QAJzB;AAKE,IAAA,OAAO,EAAE,iBAAAU,GAAG;AAAA,aACVnC,UAAU,CAAC;AACTiC,QAAAA,IAAI,EAAE,UADG;AAETP,QAAAA,SAAS,EAAES,GAAG,CAACjB,MAAJ,CAAWC;AAFb,OAAD,CADA;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAcE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAdF,CAtBF,CA9BJ,EAuEI,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,YAAY,EAAEiB,QAAQ,CAACoB,QAJzB;AAKE,IAAA,OAAO,EAAE,iBAAAU,GAAG;AAAA,aACVnC,UAAU,CAAC;AACTiC,QAAAA,IAAI,EAAE,UADG;AAETN,QAAAA,SAAS,EAAEQ,GAAG,CAACjB,MAAJ,CAAWC;AAFb,OAAD,CADA;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAcE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAdF,CADF,EAmBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,KAAK,EAAEiB,QAAQ,CAACuB,OAFlB;AAGE,IAAA,QAAQ,EAAE,kBAAAO,GAAG;AAAA,aACX7B,gBAAgB,CAAC;AAAE2B,QAAAA,IAAI,EAAE,QAAR;AAAkBL,QAAAA,OAAO,EAAEO,GAAG,CAACjB,MAAJ,CAAWC;AAAtC,OAAD,CADL;AAAA,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CAFF,CAnBF,CAvEJ,EAyGI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE;AAAA,aAAMvB,aAAa,CAAC,QAAD,CAAnB;AAAA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAzGJ,EA4GI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA5GJ,CADA,CARF,EAwHE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE;AAAA,aAAMA,aAAa,CAAC,QAAD,CAAnB;AAAA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAE,kBAAMuC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA,sBACHtC,EAAE,CAACW,MAAH,IAAaX,EAAE,CAACY,MADb;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAECF,MAAM,CAACV,EAAE,CAACW,MAAJ,EAAYX,EAAE,CAACY,MAAf,CAFP;;AAAA;AAIPb,gBAAAA,aAAa,CAAC,QAAD,CAAb;;AAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAxHF,CAXF,EAsJE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAED,KAAK,CAACyC,MAAnB;AAA2B,IAAA,MAAM,EAAE;AAAA,aAAMxC,aAAa,CAAC,QAAD,CAAnB;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,OAAO,EAAE,iBAAAuC,GAAG;AAAA,aACVrC,UAAU,CAAC;AAAEmC,QAAAA,IAAI,EAAE,OAAR;AAAiBzB,QAAAA,MAAM,EAAE2B,GAAG,CAACjB,MAAJ,CAAWC;AAApC,OAAD,CADA;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAYE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,OAAO,EAAE,iBAAAgB,GAAG;AAAA,aACVrC,UAAU,CAAC;AAAEmC,QAAAA,IAAI,EAAE,OAAR;AAAiBxB,QAAAA,MAAM,EAAE0B,GAAG,CAACjB,MAAJ,CAAWC;AAApC,OAAD,CADA;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAZF,EAsBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,CADF,CAJF,EAgCE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE;AAAA,aAAMvB,aAAa,CAAC,QAAD,CAAnB;AAAA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAE,kBAAMuC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA,sBACHtC,EAAE,CAACW,MAAH,IAAaX,EAAE,CAACY,MADb;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAECF,MAAM,CAACV,EAAE,CAACW,MAAJ,EAAYX,EAAE,CAACY,MAAf,CAFP;;AAAA;AAIPb,gBAAAA,aAAa,CAAC,QAAD,CAAb;;AAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAhCF,CAtJF,EAyME,MAAC,KAAD;AAAO,IAAA,IAAI,EAAED,KAAK,CAAC0C,MAAnB;AAA2B,IAAA,MAAM,EAAE;AAAA,aAAMzC,aAAa,CAAC,QAAD,CAAnB;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,SAAS,EAAEO,SAA5B;AAAuC,IAAA,QAAQ,EAAEW,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE1B,GAAhB;AAAqB,IAAA,SAAS,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,IAHd;AAIE,IAAA,OAAO,EAAE,iBAAA+C,GAAG;AAAA,aACVnC,UAAU,CAAC;AAAEiC,QAAAA,IAAI,EAAE,OAAR;AAAiBzB,QAAAA,MAAM,EAAE2B,GAAG,CAACjB,MAAJ,CAAWC;AAApC,OAAD,CADA;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CADF,EAcE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,SAAS,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,OAAO,EAAE,iBAAA+C,GAAG;AAAA,aACVnC,UAAU,CAAC;AAAEiC,QAAAA,IAAI,EAAE,OAAR;AAAiBxB,QAAAA,MAAM,EAAE0B,GAAG,CAACjB,MAAJ,CAAWC;AAApC,OAAD,CADA;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CAdF,CADF,EA4BE,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,SAAS,EAAC,0BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,wBAAiB,mBAHnB;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,OAAO,EAAE,iBAAA+C,GAAG;AAAA,aACVnC,UAAU,CAAC;AACTiC,QAAAA,IAAI,EAAE,SADG;AAETR,QAAAA,QAAQ,EAAEU,GAAG,CAACjB,MAAJ,CAAWC;AAFZ,OAAD,CADA;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAbF,CAFF,CADF,EAqBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,SAAS,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,OAAO,EAAE,iBAAA+C,GAAG;AAAA,aACVnC,UAAU,CAAC;AACTiC,QAAAA,IAAI,EAAE,UADG;AAETP,QAAAA,SAAS,EAAES,GAAG,CAACjB,MAAJ,CAAWC;AAFb,OAAD,CADA;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAaE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAbF,CArBF,CA5BF,EAmEE,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,OAAO,EAAE,iBAAA+C,GAAG;AAAA,aACVnC,UAAU,CAAC;AACTiC,QAAAA,IAAI,EAAE,UADG;AAETN,QAAAA,SAAS,EAAEQ,GAAG,CAACjB,MAAJ,CAAWC;AAFb,OAAD,CADA;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAaE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAbF,CADF,EAkBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,QAAQ,EAAE,kBAAA+C,GAAG;AAAA,aACXnC,UAAU,CAAC;AAAEiC,QAAAA,IAAI,EAAE,QAAR;AAAkBL,QAAAA,OAAO,EAAEO,GAAG,CAACjB,MAAJ,CAAWC;AAAtC,OAAD,CADC;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CAFF,CAlBF,CAnEF,EAmGE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE;AAAA,aAAMvB,aAAa,CAAC,QAAD,CAAnB;AAAA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnGF,EAsGE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAtGF,CADF,CAJF,EA8GE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9GF,CAzMF,CADF;AA4TD,CA7ZD;;AA8ZA,eAAeF,MAAf","sourcesContent":["import {\r\n  Button,\r\n  Navbar,\r\n  Image,\r\n  InputGroup,\r\n  Nav,\r\n  Form,\r\n  Modal,\r\n  Col\r\n} from \"react-bootstrap\";\r\nimport { useState, useReducer, useRef } from \"react\";\r\nimport useData from \"./hooks/headerHook\";\r\nimport axios from \"axios\";\r\n\r\nconst Header = () => {\r\n  const [modal, dispatchModal] = useData(\"modal\");\r\n  const [SI, dispatchSI] = useData(\"signin\");\r\n  const [SU, dispatchSU] = useData(\"signup\");\r\n  const [isLogin, setLogin] = useData(\"isLogin\");\r\n  const [validated, setValidated] = useState(false);\r\n  const [userData,dispatchUserData] = useData(\"userdata\")\r\n\r\n  const SignIn = async (userId, userPw) => {\r\n    var check = await axios.post(\"http://localhost:4000/signin\", {\r\n      userId: userId,\r\n      userPw: userPw\r\n    });\r\n    if (!check.data) {\r\n      alert(\"Login Fault\");\r\n    } else {\r\n      setLogin(check.data);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    console.log(event.target.value);\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else {\r\n      const data = SU;\r\n      console.log(data);\r\n      var check = await axios.post(\"http://localhost:4000/signup\", {\r\n        userId: data.userId,\r\n        userPw: data.userPw,\r\n        userName: data.userName,\r\n        userEmail: data.userEmail,\r\n        userPhone: data.userPhone,\r\n        userJob: data.userJob\r\n      });\r\n    }\r\n    setValidated(true);\r\n  };\r\n\r\n  const SignUp = async data => {\r\n    var check = await axios.post(\"http://localhost:4000/signup\", {\r\n      userId: data.userId,\r\n      userPw: data.userPw,\r\n      userName: data.userName,\r\n      userEmail: data.userEmail,\r\n      userPhone: data.userPhone,\r\n      userJob: data.userJob\r\n    });\r\n  };\r\n\r\n  var loginBtn;\r\n  if (!isLogin) {\r\n    loginBtn = (\r\n      <Form>\r\n        <Button\r\n          style={{ margin: \"0 10px\" }}\r\n          variant=\"dark\"\r\n          onClick={() => dispatchModal(\"openSI\")}\r\n        >\r\n          Sign in\r\n        </Button>\r\n        <Button variant=\"dark\" onClick={() => dispatchModal(\"openSU\")}>\r\n          Sign up\r\n        </Button>\r\n      </Form>\r\n    );\r\n  } else {\r\n    loginBtn = (\r\n      <Form>\r\n        <Form.Label style={{ color: \"white\" }}>{isLogin + \"'s\"}</Form.Label>\r\n        <Button variant=\"dark\" onClick={async() => {\r\n          var check = await axios.post(\"http://localhost:4000/mypage\", {\r\n            // userId: data.userId,\r\n            // userPw: data.userPw,\r\n            // userName: data.userName,\r\n            // userEmail: data.userEmail,\r\n            // userPhone: data.userPhone,\r\n            // userJob: data.userJob\r\n        });\r\n        if(check.data){\r\n          dispatchUserData({ type: \"setName\", userName: check.data })\r\n          dispatchUserData({ type: \"setJob\", userJob: \"Master\" })\r\n          dispatchModal(\"openMP\")\r\n        }else{\r\n          alert(\"Can't find User data\")\r\n        }\r\n          }}>\r\n          My Page\r\n        </Button>\r\n        <Button variant=\"dark\" onClick={() => setLogin(false)}>\r\n          Log out\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">CNU Library</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#\">Home</Nav.Link>\r\n          <Nav.Link href=\"#\">about</Nav.Link>\r\n          <Nav.Link href=\"#\">Contact</Nav.Link>\r\n        </Nav>\r\n        {loginBtn}\r\n      </Navbar>\r\n\r\n      <Modal\r\n        show={modal.showMP}\r\n        onHide={() => dispatchModal(\"hideMP\")}\r\n        onEnter={()=>{console.log(userData)}}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>My Page</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"validationCustom01\">\r\n                <Form.Label>ID</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"ID\"\r\n                  defaultValue={userData.userName}\r\n                  onInput={ref =>\r\n                    dispatchSU({ type: \"setId\", userId: ref.target.value })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"validationCustom02\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Password\"\r\n                  defaultValue={userData.userName}\r\n                  onInput={ref =>\r\n                    dispatchSU({ type: \"setPw\", userPw: ref.target.value })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"validationCustomUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    aria-describedby=\"inputGroupPrepend\"\r\n                    required\r\n                    defaultValue={userData.userName}\r\n                    onInput={ref =>\r\n                      dispatchSU({\r\n                        type: \"setName\",\r\n                        userName: ref.target.value\r\n                      })\r\n                    }\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please choose a username.\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"validationCustom03\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  defaultValue={userData.userName}\r\n                  onInput={ref =>\r\n                    dispatchSU({\r\n                      type: \"setEmail\",\r\n                      userEmail: ref.target.value\r\n                    })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a valid city.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationCustom04\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Phone\"\r\n                  required\r\n                  defaultValue={userData.userName}\r\n                  onInput={ref =>\r\n                    dispatchSU({\r\n                      type: \"setPhone\",\r\n                      userPhone: ref.target.value\r\n                    })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a valid state.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n                <Form.Label>Job</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={userData.userJob}\r\n                  onChange={ref =>\r\n                    dispatchUserData({ type: \"setJob\", userJob: ref.target.value })\r\n                  }\r\n                >\r\n                  <option>Bachelor</option>\r\n                  <option>Master</option>\r\n                  <option>Staff</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Button variant=\"secondary\" onClick={() => dispatchModal(\"hideSU\")}>\r\n              Close\r\n            </Button>\r\n            <Button type=\"submit\">Submit form</Button>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => dispatchModal(\"hideSI\")}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={async ref => {\r\n              if (SI.userId && SI.userPw) {\r\n                await SignIn(SI.userId, SI.userPw);\r\n              }\r\n              dispatchModal(\"hideSI\");\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={modal.showSI} onHide={() => dispatchModal(\"hideSI\")}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sign In</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>ID</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter ID\"\r\n                onInput={ref =>\r\n                  dispatchSI({ type: \"setId\", userId: ref.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onInput={ref =>\r\n                  dispatchSI({ type: \"setPw\", userPw: ref.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => dispatchModal(\"hideSI\")}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={async ref => {\r\n              if (SI.userId && SI.userPw) {\r\n                await SignIn(SI.userId, SI.userPw);\r\n              }\r\n              dispatchModal(\"hideSI\");\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={modal.showSU} onHide={() => dispatchModal(\"hideSU\")}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sign Up</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"validationCustom01\">\r\n                <Form.Label>ID</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"ID\"\r\n                  onInput={ref =>\r\n                    dispatchSU({ type: \"setId\", userId: ref.target.value })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"validationCustom02\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Password\"\r\n                  onInput={ref =>\r\n                    dispatchSU({ type: \"setPw\", userPw: ref.target.value })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"validationCustomUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    aria-describedby=\"inputGroupPrepend\"\r\n                    required\r\n                    onInput={ref =>\r\n                      dispatchSU({\r\n                        type: \"setName\",\r\n                        userName: ref.target.value\r\n                      })\r\n                    }\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please choose a username.\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"validationCustom03\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  onInput={ref =>\r\n                    dispatchSU({\r\n                      type: \"setEmail\",\r\n                      userEmail: ref.target.value\r\n                    })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a valid city.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationCustom04\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Phone\"\r\n                  required\r\n                  onInput={ref =>\r\n                    dispatchSU({\r\n                      type: \"setPhone\",\r\n                      userPhone: ref.target.value\r\n                    })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a valid state.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n                <Form.Label>Job</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={ref =>\r\n                    dispatchSU({ type: \"setJob\", userJob: ref.target.value })\r\n                  }\r\n                >\r\n                  <option>Bachelor</option>\r\n                  <option>Master</option>\r\n                  <option>Staff</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Button variant=\"secondary\" onClick={() => dispatchModal(\"hideSU\")}>\r\n              Close\r\n            </Button>\r\n            <Button type=\"submit\">Submit form</Button>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer></Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}