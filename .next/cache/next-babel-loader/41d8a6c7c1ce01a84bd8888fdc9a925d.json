{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gyeongmin\\\\LibrarySystem\\\\pages\\\\MyPage.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Navbar, Image, InputGroup, Nav, Form, Modal, Col } from \"react-bootstrap\";\n\nconst MyPage = props => {\n  return __jsx(Modal, {\n    show: props.show,\n    onHide: props.onHide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"My Page\")), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"ID\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter ID\",\n    onInput: ref => dispatchSI({\n      type: \"setId\",\n      userId: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Password\"), __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onInput: ref => dispatchSI({\n      type: \"setPw\",\n      userPw: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicCheckbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"Check me out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })))), __jsx(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: props.onHide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Close\"), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: async ref => {\n      //   if (SI.userId && SI.userPw) {\n      //     await SignIn(SI.userId, SI.userPw);\n      //   }\n      {\n        props.onHide;\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default MyPage;","map":{"version":3,"sources":["C:/Users/gyeongmin/LibrarySystem/pages/MyPage.js"],"names":["Button","Navbar","Image","InputGroup","Nav","Form","Modal","Col","MyPage","props","show","onHide","ref","dispatchSI","type","userId","target","value","userPw"],"mappings":";;;AAAA,SACIA,MADJ,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,UAJJ,EAKIC,GALJ,EAMIC,IANJ,EAOIC,KAPJ,EAQIC,GARJ,QASS,iBATT;;AAWA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEtB,SACI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,KAAK,CAACC,IAAnB;AAAyB,IAAA,MAAM,EAAED,KAAK,CAACE,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADA,EAIA,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,OAAO,EAAEC,GAAG,IACVC,UAAU,CAAC;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,MAAM,EAAEH,GAAG,CAACI,MAAJ,CAAWC;AAApC,KAAD,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAYE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,OAAO,EAAEL,GAAG,IACVC,UAAU,CAAC;AAAEC,MAAAA,IAAI,EAAE,OAAR;AAAiBI,MAAAA,MAAM,EAAEN,GAAG,CAACI,MAAJ,CAAWC;AAApC,KAAD,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAZF,EAsBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,CADF,CAJA,EAgCA,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAER,KAAK,CAACE,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAE,MAAMC,GAAN,IAAa;AACtB;AACA;AACA;AACE;AAACH,QAAAA,KAAK,CAACE,MAAN;AAAa;AACf,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAhCA,CADJ;AAoDH,CAtDD;;AAwDA,eAAeH,MAAf","sourcesContent":["import {\r\n    Button,\r\n    Navbar,\r\n    Image,\r\n    InputGroup,\r\n    Nav,\r\n    Form,\r\n    Modal,\r\n    Col\r\n  } from \"react-bootstrap\";\r\n\r\nconst MyPage = (props) => {\r\n\r\n    return(\r\n        <Modal show={props.show} onHide={props.onHide}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>My Page</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>ID</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter ID\"\r\n                onInput={ref =>\r\n                  dispatchSI({ type: \"setId\", userId: ref.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onInput={ref =>\r\n                  dispatchSI({ type: \"setPw\", userPw: ref.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.onHide}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={async ref => {\r\n            //   if (SI.userId && SI.userPw) {\r\n            //     await SignIn(SI.userId, SI.userPw);\r\n            //   }\r\n              {props.onHide}\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n}\r\n\r\nexport default MyPage;"]},"metadata":{},"sourceType":"module"}