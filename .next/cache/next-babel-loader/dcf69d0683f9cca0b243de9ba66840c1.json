{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gyeongmin\\\\LibrarySystem\\\\pages\\\\Header.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Navbar, Image, Nav, Form, Modal, Col } from \"react-bootstrap\";\nimport { useState, useReducer } from \"react\";\nimport useData from \"./hooks/headerHook\";\nimport axios from \"axios\";\n\nconst SignIn = async (userId, userPw) => {\n  console.log(\"Hi\");\n  var check = await axios.post(\"http://localhost:4000/signin\", {\n    userId: userId,\n    userPw: userPw\n  });\n\n  if (check.data) {\n    setLogin(true);\n  }\n};\n\nconst Header = () => {\n  const [modal, dispatchModal] = useData(\"modal\");\n  const [SI, dispatchSI] = useData(\"signin\");\n  const [isLogin, setLogin] = useData(\"isLogin\");\n  console.log(isLogin);\n\n  async function checkLogin(e) {\n    // e.preventDefault()\n    var check = await dispatchSI({\n      type: \"setData\"\n    });\n    console.log(check);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Navbar.Brand, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"CNU Library\"), __jsx(Nav, {\n    className: \"mr-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Nav.Link, {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Home\"), __jsx(Nav.Link, {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"about\"), __jsx(Nav.Link, {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Contact\")), __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      margin: \"0 10px\"\n    },\n    variant: \"dark\",\n    onClick: () => dispatchModal(\"openSI\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Sign in\"), __jsx(Button, {\n    variant: \"dark\",\n    onClick: () => dispatchModal(\"openSU\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Sign up\"))), __jsx(Modal, {\n    show: modal.showSI,\n    onHide: () => dispatchModal(\"hideSI\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Sign In\")), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"ID\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter ID\",\n    onInput: ref => dispatchSI({\n      type: \"setId\",\n      userId: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Password\"), __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onInput: ref => dispatchSI({\n      type: \"setPw\",\n      userPw: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicCheckbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"Check me out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })))), __jsx(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: () => dispatchModal(\"hideSI\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Close\"), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: async ref => {\n      if (SI.userId && SI.userPw) {\n        await SignIn();\n      }\n\n      dispatchModal(\"hideSI\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Submit\"))), __jsx(Modal, {\n    show: modal.showSU,\n    onHide: () => dispatchModal(\"hideSU\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Sign Up\")), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"formGridID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"ID\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter ID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"formGridPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Password\"), __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))), __jsx(Form.Group, {\n    controlId: \"formGridName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Name\"), __jsx(Form.Control, {\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    controlId: \"formGridEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"email\"), __jsx(Form.Control, {\n    type: \"email\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"formGridPhone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Phone\"), __jsx(Form.Control, {\n    type: \"phone\",\n    placeholder: \"Phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"formGridJob\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Job\"), __jsx(Form.Control, {\n    as: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Bachelor\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Master\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Staff\")))))), __jsx(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: () => dispatchModal(\"hideSU\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Close\"), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: () => dispatchModal(\"hideSU\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/gyeongmin/LibrarySystem/pages/Header.js"],"names":["Button","Navbar","Image","Nav","Form","Modal","Col","useState","useReducer","useData","axios","SignIn","userId","userPw","console","log","check","post","data","setLogin","Header","modal","dispatchModal","SI","dispatchSI","isLogin","checkLogin","e","type","margin","showSI","ref","target","value","showSU"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,GAAhC,EAAqCC,IAArC,EAA2CC,KAA3C,EAAiDC,GAAjD,QAA4D,iBAA5D;AACA,SAASC,QAAT,EAAkBC,UAAlB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,OAAOC,MAAP,EAAcC,MAAd,KAAuB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,MAAIC,KAAK,GAAE,MAAMN,KAAK,CAACO,IAAN,CAAW,8BAAX,EAA0C;AACvDL,IAAAA,MAAM,EAACA,MADgD;AAEvDC,IAAAA,MAAM,EAACA;AAFgD,GAA1C,CAAjB;;AAIA,MAAGG,KAAK,CAACE,IAAT,EAAc;AACZC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,CATD;;AAUA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,KAAD,EAAOC,aAAP,IAAsBb,OAAO,CAAC,OAAD,CAAnC;AACA,QAAM,CAACc,EAAD,EAAIC,UAAJ,IAAgBf,OAAO,CAAC,QAAD,CAA7B;AACA,QAAM,CAACgB,OAAD,EAASN,QAAT,IAAqBV,OAAO,CAAC,SAAD,CAAlC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYU,OAAZ;;AACA,iBAAeC,UAAf,CAA0BC,CAA1B,EAA4B;AAC1B;AACA,QAAIX,KAAK,GAAE,MAAMQ,UAAU,CAAC;AAACI,MAAAA,IAAI,EAAC;AAAN,KAAD,CAA3B;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;;AACD,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,OAAO,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CAFF,EAOE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,OAAO,EAAE,MAAIP,aAAa,CAAC,QAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAQE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAE,MAAIA,aAAa,CAAC,QAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,CAPF,CADF,EAwBE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAED,KAAK,CAACS,MAAnB;AAA2B,IAAA,MAAM,EAAE,MAAIR,aAAa,CAAC,QAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,UAAtC;AAAiD,IAAA,OAAO,EAAGS,GAAD,IAAOP,UAAU,CAAC;AAACI,MAAAA,IAAI,EAAC,OAAN;AAAchB,MAAAA,MAAM,EAACmB,GAAG,CAACC,MAAJ,CAAWC;AAAhC,KAAD,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAME,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,WAAW,EAAC,UAA1C;AAAqD,IAAA,OAAO,EAAGF,GAAD,IAAOP,UAAU,CAAC;AAACI,MAAAA,IAAI,EAAC,OAAN;AAAcf,MAAAA,MAAM,EAACkB,GAAG,CAACC,MAAJ,CAAWC;AAAhC,KAAD,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,EAUE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADF,CAJF,EAoBE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE,MAAIX,aAAa,CAAC,QAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAwC,IAAA,OAAO,EAAE,MAAMS,GAAN,IAAY;AAC3D,UAAIR,EAAE,CAACX,MAAH,IAAWW,EAAE,CAACV,MAAlB,EAA0B;AACxB,cAAMF,MAAM,EAAZ;AACD;;AACDW,MAAAA,aAAa,CAAC,QAAD,CAAb;AACC,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CApBF,CAxBF,EA2DE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAED,KAAK,CAACa,MAAnB;AAA2B,IAAA,MAAM,EAAE,MAAIZ,aAAa,CAAC,QAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEhB,GAAhB;AAAqB,IAAA,SAAS,EAAC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,WAAW,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAME,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,WAAW,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CADF,EAaE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,WAAW,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbF,EAkBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,WAAW,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAlBF,EAsBE,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,WAAW,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAOE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEA,GAAhB;AAAqB,IAAA,SAAS,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,EAAE,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CAFF,CAPF,CAtBF,CADF,CAJF,EA6CE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE,MAAIgB,aAAa,CAAC,QAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAwC,IAAA,OAAO,EAAE,MAAIA,aAAa,CAAC,QAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CA7CF,CA3DF,CADF;AAoHD,CA9HD;;AA+HA,eAAeF,MAAf","sourcesContent":["import { Button, Navbar, Image, Nav, Form, Modal,Col } from \"react-bootstrap\";\r\nimport { useState,useReducer } from \"react\";\r\nimport useData from \"./hooks/headerHook\"\r\nimport axios from \"axios\"\r\n\r\nconst SignIn = async (userId,userPw)=>{\r\n  console.log(\"Hi\")\r\n  var check= await axios.post(\"http://localhost:4000/signin\",{\r\n      userId:userId,\r\n      userPw:userPw\r\n  })\r\n  if(check.data){\r\n    setLogin(true)\r\n  }\r\n}\r\nconst Header = () => {\r\n  const [modal,dispatchModal]=useData(\"modal\");\r\n  const [SI,dispatchSI]=useData(\"signin\");\r\n  const [isLogin,setLogin] = useData(\"isLogin\")\r\n  console.log(isLogin)\r\n  async function checkLogin(e){\r\n    // e.preventDefault()\r\n    var check= await dispatchSI({type:\"setData\"})\r\n    console.log(check)\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">CNU Library</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#\">Home</Nav.Link>\r\n          <Nav.Link href=\"#\">about</Nav.Link>\r\n          <Nav.Link href=\"#\">Contact</Nav.Link>\r\n        </Nav>\r\n        <Form>\r\n          <Button\r\n            style={{ margin: \"0 10px\" }}\r\n            variant=\"dark\"\r\n            onClick={()=>dispatchModal(\"openSI\")}\r\n          >\r\n            Sign in\r\n          </Button>\r\n          <Button variant=\"dark\" onClick={()=>dispatchModal(\"openSU\")}>\r\n            Sign up\r\n          </Button>\r\n          \r\n        </Form>\r\n      </Navbar>\r\n\r\n\r\n      <Modal show={modal.showSI} onHide={()=>dispatchModal(\"hideSI\")}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sign In</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>ID</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Enter ID\" onInput={(ref)=>dispatchSI({type:\"setId\",userId:ref.target.value})}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Password\" onInput={(ref)=>dispatchSI({type:\"setPw\",userPw:ref.target.value})}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>dispatchModal(\"hideSI\")}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={async(ref)=>{\r\n            if((SI.userId&&SI.userPw)){\r\n              await SignIn()\r\n            }\r\n            dispatchModal(\"hideSI\")\r\n            }}>\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={modal.showSU} onHide={()=>dispatchModal(\"hideSU\")}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sign Up</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridID\">\r\n                <Form.Label>ID</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter ID\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group controlId=\"formGridName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control placeholder=\"Name\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGridEmail\">\r\n              <Form.Label>email</Form.Label>\r\n              <Form.Control type=\"email\" placeholder=\"Email\" />\r\n            </Form.Group>\r\n            <Form.Row>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridPhone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control type=\"phone\" placeholder=\"Phone\"/>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridJob\">\r\n                <Form.Label>Job</Form.Label>\r\n                <Form.Control as=\"select\">\r\n                  <option>Bachelor</option>\r\n                  <option>Master</option>\r\n                  <option>Staff</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>dispatchModal(\"hideSU\")}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={()=>dispatchModal(\"hideSU\")}>\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}