{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gyeongmin\\\\LibrarySystem\\\\pages\\\\Header.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Navbar, Image, InputGroup, Nav, Form, Modal, Col } from \"react-bootstrap\";\nimport { useState, useReducer, useRef } from \"react\";\nimport useData from \"./hooks/headerHook\";\nimport axios from \"axios\";\n\nconst Header = () => {\n  const [modal, dispatchModal] = useData(\"modal\");\n  const [SI, dispatchSI] = useData(\"signin\");\n  const [SU, dispatchSU] = useData(\"signup\");\n  const [isLogin, setLogin] = useData(\"isLogin\");\n  const {\n    0: validated,\n    1: setValidated\n  } = useState(false);\n  const [userData, dispatchUserData] = useData(\"userdata\");\n\n  const SignIn = async (userId, userPw) => {\n    var check = await axios.post(\"http://localhost:4000/signin\", {\n      userId: userId,\n      userPw: userPw\n    });\n\n    if (!check.data) {\n      alert(\"Login Fault\");\n    } else {\n      setLogin(check.data);\n    }\n  };\n\n  const handleSubmit = async event => {\n    console.log(event.target.value);\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      const data = SU;\n      console.log(data);\n      var check = await axios.post(\"http://localhost:4000/signup\", {\n        userId: data.userId,\n        userPw: data.userPw,\n        userName: data.userName,\n        userEmail: data.userEmail,\n        userPhone: data.userPhone,\n        userJob: data.userJob\n      });\n    }\n\n    setValidated(true);\n  };\n\n  const SignUp = async data => {\n    var check = await axios.post(\"http://localhost:4000/signup\", {\n      userId: data.userId,\n      userPw: data.userPw,\n      userName: data.userName,\n      userEmail: data.userEmail,\n      userPhone: data.userPhone,\n      userJob: data.userJob\n    });\n  };\n\n  var loginBtn;\n\n  if (!isLogin) {\n    loginBtn = __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(Button, {\n      style: {\n        margin: \"0 10px\"\n      },\n      variant: \"dark\",\n      onClick: () => dispatchModal(\"openSI\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Sign in\"), __jsx(Button, {\n      variant: \"dark\",\n      onClick: () => dispatchModal(\"openSU\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Sign up\"));\n  } else {\n    loginBtn = __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, isLogin + \"'s\"), __jsx(Button, {\n      variant: \"dark\",\n      onClick: async () => {\n        var check = await axios.post(\"http://localhost:4000/mypage\", {// userId: data.userId,\n          // userPw: data.userPw,\n          // userName: data.userName,\n          // userEmail: data.userEmail,\n          // userPhone: data.userPhone,\n          // userJob: data.userJob\n        });\n\n        if (check.data) {\n          dispatchUserData({\n            type: \"setName\",\n            userName: check.data\n          });\n          dispatchUserData({\n            type: \"setJob\",\n            userJob: \"master\"\n          });\n          dispatchModal(\"openMP\");\n        } else {\n          alert(\"Can't find User data\");\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"My Page\"), __jsx(Button, {\n      variant: \"dark\",\n      onClick: () => setLogin(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Log out\"));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(Navbar.Brand, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"CNU Library\"), __jsx(Nav, {\n    className: \"mr-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(Nav.Link, {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Home\"), __jsx(Nav.Link, {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"about\"), __jsx(Nav.Link, {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Contact\")), loginBtn), __jsx(Modal, {\n    show: modal.showMP,\n    onHide: () => dispatchModal(\"hideMP\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"My Page\")), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustom01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"ID\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"ID\",\n    defaultValue: userData.userName,\n    onInput: ref => dispatchSU({\n      type: \"setId\",\n      userId: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Looks good!\")), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustom02\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Password\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"Password\",\n    defaultValue: userData.userName,\n    onInput: ref => dispatchSU({\n      type: \"setPw\",\n      userPw: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Looks good!\"))), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustomUsername\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Username\"), __jsx(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    required: true,\n    defaultValue: userData.userName,\n    onInput: ref => dispatchSU({\n      type: \"setName\",\n      userName: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Please choose a username.\"))), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustom03\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Email\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Email\",\n    required: true,\n    defaultValue: userData.userName,\n    onInput: ref => dispatchSU({\n      type: \"setEmail\",\n      userEmail: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Please provide a valid city.\"))), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom04\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Phone\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Phone\",\n    required: true,\n    defaultValue: userData.userName,\n    onInput: ref => dispatchSU({\n      type: \"setPhone\",\n      userPhone: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Please provide a valid state.\")), __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom05\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Job\"), __jsx(Form.Control, {\n    as: \"select\",\n    onChange: ref => dispatchSU({\n      type: \"setJob\",\n      userJob: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Bachelor\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"Master\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Staff\")))), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: () => dispatchModal(\"hideSU\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"Close\"), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"Submit form\"))), __jsx(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: () => dispatchModal(\"hideSI\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Close\"), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: async ref => {\n      if (SI.userId && SI.userPw) {\n        await SignIn(SI.userId, SI.userPw);\n      }\n\n      dispatchModal(\"hideSI\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Submit\"))), __jsx(Modal, {\n    show: modal.showSI,\n    onHide: () => dispatchModal(\"hideSI\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, __jsx(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"Sign In\")), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"ID\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter ID\",\n    onInput: ref => dispatchSI({\n      type: \"setId\",\n      userId: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"Password\"), __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onInput: ref => dispatchSI({\n      type: \"setPw\",\n      userPw: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  })), __jsx(Form.Group, {\n    controlId: \"formBasicCheckbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, __jsx(Form.Check, {\n    type: \"checkbox\",\n    label: \"Check me out\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  })))), __jsx(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: () => dispatchModal(\"hideSI\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, \"Close\"), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: async ref => {\n      if (SI.userId && SI.userPw) {\n        await SignIn(SI.userId, SI.userPw);\n      }\n\n      dispatchModal(\"hideSI\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, \"Submit\"))), __jsx(Modal, {\n    show: modal.showSU,\n    onHide: () => dispatchModal(\"hideSU\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, __jsx(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, \"Sign Up\")), __jsx(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, __jsx(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustom01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }, \"ID\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"ID\",\n    onInput: ref => dispatchSU({\n      type: \"setId\",\n      userId: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, \"Looks good!\")), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustom02\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, \"Password\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"Password\",\n    onInput: ref => dispatchSU({\n      type: \"setPw\",\n      userPw: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, \"Looks good!\"))), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustomUsername\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, \"Username\"), __jsx(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    required: true,\n    onInput: ref => dispatchSU({\n      type: \"setName\",\n      userName: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, \"Please choose a username.\"))), __jsx(Form.Group, {\n    as: Col,\n    controlId: \"validationCustom03\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, \"Email\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Email\",\n    required: true,\n    onInput: ref => dispatchSU({\n      type: \"setEmail\",\n      userEmail: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, \"Please provide a valid city.\"))), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom04\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, \"Phone\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Phone\",\n    required: true,\n    onInput: ref => dispatchSU({\n      type: \"setPhone\",\n      userPhone: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }, \"Please provide a valid state.\")), __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationCustom05\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403\n    },\n    __self: this\n  }, \"Job\"), __jsx(Form.Control, {\n    as: \"select\",\n    onChange: ref => dispatchSU({\n      type: \"setJob\",\n      userJob: ref.target.value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }, \"Bachelor\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }, \"Master\"), __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, \"Staff\")))), __jsx(Button, {\n    variant: \"secondary\",\n    onClick: () => dispatchModal(\"hideSU\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416\n    },\n    __self: this\n  }, \"Close\"), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }, \"Submit form\"))), __jsx(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422\n    },\n    __self: this\n  })));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/gyeongmin/LibrarySystem/pages/Header.js"],"names":["Button","Navbar","Image","InputGroup","Nav","Form","Modal","Col","useState","useReducer","useRef","useData","axios","Header","modal","dispatchModal","SI","dispatchSI","SU","dispatchSU","isLogin","setLogin","validated","setValidated","userData","dispatchUserData","SignIn","userId","userPw","check","post","data","alert","handleSubmit","event","console","log","target","value","form","currentTarget","checkValidity","preventDefault","stopPropagation","userName","userEmail","userPhone","userJob","SignUp","loginBtn","margin","color","type","showMP","ref","showSI","showSU"],"mappings":";;;AAAA,SACEA,MADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,GALF,EAMEC,IANF,EAOEC,KAPF,EAQEC,GARF,QASO,iBATP;AAUA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,MAA/B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAACC,KAAD,EAAQC,aAAR,IAAyBJ,OAAO,CAAC,OAAD,CAAtC;AACA,QAAM,CAACK,EAAD,EAAKC,UAAL,IAAmBN,OAAO,CAAC,QAAD,CAAhC;AACA,QAAM,CAACO,EAAD,EAAKC,UAAL,IAAmBR,OAAO,CAAC,QAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,QAAV,IAAsBV,OAAO,CAAC,SAAD,CAAnC;AACA,QAAM;AAAA,OAACW,SAAD;AAAA,OAAYC;AAAZ,MAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACgB,QAAD,EAAUC,gBAAV,IAA8Bd,OAAO,CAAC,UAAD,CAA3C;;AAEA,QAAMe,MAAM,GAAG,OAAOC,MAAP,EAAeC,MAAf,KAA0B;AACvC,QAAIC,KAAK,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,8BAAX,EAA2C;AAC3DH,MAAAA,MAAM,EAAEA,MADmD;AAE3DC,MAAAA,MAAM,EAAEA;AAFmD,KAA3C,CAAlB;;AAIA,QAAI,CAACC,KAAK,CAACE,IAAX,EAAiB;AACfC,MAAAA,KAAK,CAAC,aAAD,CAAL;AACD,KAFD,MAEO;AACLX,MAAAA,QAAQ,CAACQ,KAAK,CAACE,IAAP,CAAR;AACD;AACF,GAVD;;AAYA,QAAME,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACA,UAAMC,IAAI,GAAGL,KAAK,CAACM,aAAnB;;AACA,QAAID,IAAI,CAACE,aAAL,OAAyB,KAA7B,EAAoC;AAClCP,MAAAA,KAAK,CAACQ,cAAN;AACAR,MAAAA,KAAK,CAACS,eAAN;AACD,KAHD,MAGO;AACL,YAAMZ,IAAI,GAAGb,EAAb;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,UAAIF,KAAK,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,8BAAX,EAA2C;AAC3DH,QAAAA,MAAM,EAAEI,IAAI,CAACJ,MAD8C;AAE3DC,QAAAA,MAAM,EAAEG,IAAI,CAACH,MAF8C;AAG3DgB,QAAAA,QAAQ,EAAEb,IAAI,CAACa,QAH4C;AAI3DC,QAAAA,SAAS,EAAEd,IAAI,CAACc,SAJ2C;AAK3DC,QAAAA,SAAS,EAAEf,IAAI,CAACe,SAL2C;AAM3DC,QAAAA,OAAO,EAAEhB,IAAI,CAACgB;AAN6C,OAA3C,CAAlB;AAQD;;AACDxB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAnBD;;AAqBA,QAAMyB,MAAM,GAAG,MAAMjB,IAAN,IAAc;AAC3B,QAAIF,KAAK,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,8BAAX,EAA2C;AAC3DH,MAAAA,MAAM,EAAEI,IAAI,CAACJ,MAD8C;AAE3DC,MAAAA,MAAM,EAAEG,IAAI,CAACH,MAF8C;AAG3DgB,MAAAA,QAAQ,EAAEb,IAAI,CAACa,QAH4C;AAI3DC,MAAAA,SAAS,EAAEd,IAAI,CAACc,SAJ2C;AAK3DC,MAAAA,SAAS,EAAEf,IAAI,CAACe,SAL2C;AAM3DC,MAAAA,OAAO,EAAEhB,IAAI,CAACgB;AAN6C,KAA3C,CAAlB;AAQD,GATD;;AAWA,MAAIE,QAAJ;;AACA,MAAI,CAAC7B,OAAL,EAAc;AACZ6B,IAAAA,QAAQ,GACN,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OADT;AAEE,MAAA,OAAO,EAAC,MAFV;AAGE,MAAA,OAAO,EAAE,MAAMnC,aAAa,CAAC,QAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAQE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,QAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,CADF;AAcD,GAfD,MAeO;AACLkC,IAAAA,QAAQ,GACN,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC/B,OAAO,GAAG,IAAlD,CADF,EAEE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,YAAW;AACzC,YAAIS,KAAK,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,8BAAX,EAA2C,CAC3D;AACA;AACA;AACA;AACA;AACA;AAN2D,SAA3C,CAAlB;;AAQF,YAAGD,KAAK,CAACE,IAAT,EAAc;AACZN,UAAAA,gBAAgB,CAAC;AAAE2B,YAAAA,IAAI,EAAE,SAAR;AAAmBR,YAAAA,QAAQ,EAAEf,KAAK,CAACE;AAAnC,WAAD,CAAhB;AACAN,UAAAA,gBAAgB,CAAC;AAAE2B,YAAAA,IAAI,EAAE,QAAR;AAAkBL,YAAAA,OAAO,EAAE;AAA3B,WAAD,CAAhB;AACAhC,UAAAA,aAAa,CAAC,QAAD,CAAb;AACD,SAJD,MAIK;AACHiB,UAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACE,OAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAqBE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,MAAMX,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBArBF,CADF;AA2BD;;AACD,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,OAAO,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE,MAAC,GAAD,CAAK,IAAL;AAAU,IAAA,IAAI,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CAFF,EAOG4B,QAPH,CADF,EAWE,MAAC,KAAD;AACE,IAAA,IAAI,EAAEnC,KAAK,CAACuC,MADd;AAEE,IAAA,MAAM,EAAE,MAAMtC,aAAa,CAAC,QAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAJF,EAOE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,SAAS,EAAEO,SAA5B;AAAuC,IAAA,QAAQ,EAAEW,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE1B,GAAhB;AAAqB,IAAA,SAAS,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,IAHd;AAIE,IAAA,YAAY,EAAEiB,QAAQ,CAACoB,QAJzB;AAKE,IAAA,OAAO,EAAEU,GAAG,IACVnC,UAAU,CAAC;AAAEiC,MAAAA,IAAI,EAAE,OAAR;AAAiBzB,MAAAA,MAAM,EAAE2B,GAAG,CAACjB,MAAJ,CAAWC;AAApC,KAAD,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF,EAeE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,SAAS,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,YAAY,EAAEiB,QAAQ,CAACoB,QAJzB;AAKE,IAAA,OAAO,EAAEU,GAAG,IACVnC,UAAU,CAAC;AAAEiC,MAAAA,IAAI,EAAE,OAAR;AAAiBxB,MAAAA,MAAM,EAAE0B,GAAG,CAACjB,MAAJ,CAAWC;AAApC,KAAD,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CAfF,CADJ,EA8BI,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,SAAS,EAAC,0BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,wBAAiB,mBAHnB;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,YAAY,EAAEiB,QAAQ,CAACoB,QALzB;AAME,IAAA,OAAO,EAAEU,GAAG,IACVnC,UAAU,CAAC;AACTiC,MAAAA,IAAI,EAAE,SADG;AAETR,MAAAA,QAAQ,EAAEU,GAAG,CAACjB,MAAJ,CAAWC;AAFZ,KAAD,CAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAcE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAdF,CAFF,CADF,EAsBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,SAAS,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,YAAY,EAAEiB,QAAQ,CAACoB,QAJzB;AAKE,IAAA,OAAO,EAAEU,GAAG,IACVnC,UAAU,CAAC;AACTiC,MAAAA,IAAI,EAAE,UADG;AAETP,MAAAA,SAAS,EAAES,GAAG,CAACjB,MAAJ,CAAWC;AAFb,KAAD,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAcE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAdF,CAtBF,CA9BJ,EAuEI,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,YAAY,EAAEiB,QAAQ,CAACoB,QAJzB;AAKE,IAAA,OAAO,EAAEU,GAAG,IACVnC,UAAU,CAAC;AACTiC,MAAAA,IAAI,EAAE,UADG;AAETN,MAAAA,SAAS,EAAEQ,GAAG,CAACjB,MAAJ,CAAWC;AAFb,KAAD,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAcE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAdF,CADF,EAmBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,QAAQ,EAAE+C,GAAG,IACXnC,UAAU,CAAC;AAAEiC,MAAAA,IAAI,EAAE,QAAR;AAAkBL,MAAAA,OAAO,EAAEO,GAAG,CAACjB,MAAJ,CAAWC;AAAtC,KAAD,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CAFF,CAnBF,CAvEJ,EAwGI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE,MAAMvB,aAAa,CAAC,QAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxGJ,EA2GI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA3GJ,CADA,CAPF,EAsHE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,QAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAE,MAAMuC,GAAN,IAAa;AACpB,UAAItC,EAAE,CAACW,MAAH,IAAaX,EAAE,CAACY,MAApB,EAA4B;AAC1B,cAAMF,MAAM,CAACV,EAAE,CAACW,MAAJ,EAAYX,EAAE,CAACY,MAAf,CAAZ;AACD;;AACDb,MAAAA,aAAa,CAAC,QAAD,CAAb;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAtHF,CAXF,EAoJE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAED,KAAK,CAACyC,MAAnB;AAA2B,IAAA,MAAM,EAAE,MAAMxC,aAAa,CAAC,QAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,OAAO,EAAEuC,GAAG,IACVrC,UAAU,CAAC;AAAEmC,MAAAA,IAAI,EAAE,OAAR;AAAiBzB,MAAAA,MAAM,EAAE2B,GAAG,CAACjB,MAAJ,CAAWC;AAApC,KAAD,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAYE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,OAAO,EAAEgB,GAAG,IACVrC,UAAU,CAAC;AAAEmC,MAAAA,IAAI,EAAE,OAAR;AAAiBxB,MAAAA,MAAM,EAAE0B,GAAG,CAACjB,MAAJ,CAAWC;AAApC,KAAD,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAZF,EAsBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,CADF,CAJF,EAgCE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE,MAAMvB,aAAa,CAAC,QAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAIE,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,SADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAE,MAAMuC,GAAN,IAAa;AACpB,UAAItC,EAAE,CAACW,MAAH,IAAaX,EAAE,CAACY,MAApB,EAA4B;AAC1B,cAAMF,MAAM,CAACV,EAAE,CAACW,MAAJ,EAAYX,EAAE,CAACY,MAAf,CAAZ;AACD;;AACDb,MAAAA,aAAa,CAAC,QAAD,CAAb;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAhCF,CApJF,EAuME,MAAC,KAAD;AAAO,IAAA,IAAI,EAAED,KAAK,CAAC0C,MAAnB;AAA2B,IAAA,MAAM,EAAE,MAAMzC,aAAa,CAAC,QAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,MAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,SAAS,EAAEO,SAA5B;AAAuC,IAAA,QAAQ,EAAEW,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE1B,GAAhB;AAAqB,IAAA,SAAS,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,IAHd;AAIE,IAAA,OAAO,EAAE+C,GAAG,IACVnC,UAAU,CAAC;AAAEiC,MAAAA,IAAI,EAAE,OAAR;AAAiBzB,MAAAA,MAAM,EAAE2B,GAAG,CAACjB,MAAJ,CAAWC;AAApC,KAAD,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CADF,EAcE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,SAAS,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,OAAO,EAAE+C,GAAG,IACVnC,UAAU,CAAC;AAAEiC,MAAAA,IAAI,EAAE,OAAR;AAAiBxB,MAAAA,MAAM,EAAE0B,GAAG,CAACjB,MAAJ,CAAWC;AAApC,KAAD,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CAdF,CADF,EA4BE,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,SAAS,EAAC,0BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,wBAAiB,mBAHnB;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,OAAO,EAAE+C,GAAG,IACVnC,UAAU,CAAC;AACTiC,MAAAA,IAAI,EAAE,SADG;AAETR,MAAAA,QAAQ,EAAEU,GAAG,CAACjB,MAAJ,CAAWC;AAFZ,KAAD,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAbF,CAFF,CADF,EAqBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,SAAS,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,OAAO,EAAE+C,GAAG,IACVnC,UAAU,CAAC;AACTiC,MAAAA,IAAI,EAAE,UADG;AAETP,MAAAA,SAAS,EAAES,GAAG,CAACjB,MAAJ,CAAWC;AAFb,KAAD,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAaE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAbF,CArBF,CA5BF,EAmEE,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,OAAO,EAAE+C,GAAG,IACVnC,UAAU,CAAC;AACTiC,MAAAA,IAAI,EAAE,UADG;AAETN,MAAAA,SAAS,EAAEQ,GAAG,CAACjB,MAAJ,CAAWC;AAFb,KAAD,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAaE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAbF,CADF,EAkBE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE/B,GAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,SAAS,EAAC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,QAAQ,EAAE+C,GAAG,IACXnC,UAAU,CAAC;AAAEiC,MAAAA,IAAI,EAAE,QAAR;AAAkBL,MAAAA,OAAO,EAAEO,GAAG,CAACjB,MAAJ,CAAWC;AAAtC,KAAD,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CAFF,CAlBF,CAnEF,EAmGE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE,MAAMvB,aAAa,CAAC,QAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnGF,EAsGE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAtGF,CADF,CAJF,EA8GE,MAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9GF,CAvMF,CADF;AA0TD,CA3ZD;;AA4ZA,eAAeF,MAAf","sourcesContent":["import {\r\n  Button,\r\n  Navbar,\r\n  Image,\r\n  InputGroup,\r\n  Nav,\r\n  Form,\r\n  Modal,\r\n  Col\r\n} from \"react-bootstrap\";\r\nimport { useState, useReducer, useRef } from \"react\";\r\nimport useData from \"./hooks/headerHook\";\r\nimport axios from \"axios\";\r\n\r\nconst Header = () => {\r\n  const [modal, dispatchModal] = useData(\"modal\");\r\n  const [SI, dispatchSI] = useData(\"signin\");\r\n  const [SU, dispatchSU] = useData(\"signup\");\r\n  const [isLogin, setLogin] = useData(\"isLogin\");\r\n  const [validated, setValidated] = useState(false);\r\n  const [userData,dispatchUserData] = useData(\"userdata\")\r\n\r\n  const SignIn = async (userId, userPw) => {\r\n    var check = await axios.post(\"http://localhost:4000/signin\", {\r\n      userId: userId,\r\n      userPw: userPw\r\n    });\r\n    if (!check.data) {\r\n      alert(\"Login Fault\");\r\n    } else {\r\n      setLogin(check.data);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    console.log(event.target.value);\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else {\r\n      const data = SU;\r\n      console.log(data);\r\n      var check = await axios.post(\"http://localhost:4000/signup\", {\r\n        userId: data.userId,\r\n        userPw: data.userPw,\r\n        userName: data.userName,\r\n        userEmail: data.userEmail,\r\n        userPhone: data.userPhone,\r\n        userJob: data.userJob\r\n      });\r\n    }\r\n    setValidated(true);\r\n  };\r\n\r\n  const SignUp = async data => {\r\n    var check = await axios.post(\"http://localhost:4000/signup\", {\r\n      userId: data.userId,\r\n      userPw: data.userPw,\r\n      userName: data.userName,\r\n      userEmail: data.userEmail,\r\n      userPhone: data.userPhone,\r\n      userJob: data.userJob\r\n    });\r\n  };\r\n\r\n  var loginBtn;\r\n  if (!isLogin) {\r\n    loginBtn = (\r\n      <Form>\r\n        <Button\r\n          style={{ margin: \"0 10px\" }}\r\n          variant=\"dark\"\r\n          onClick={() => dispatchModal(\"openSI\")}\r\n        >\r\n          Sign in\r\n        </Button>\r\n        <Button variant=\"dark\" onClick={() => dispatchModal(\"openSU\")}>\r\n          Sign up\r\n        </Button>\r\n      </Form>\r\n    );\r\n  } else {\r\n    loginBtn = (\r\n      <Form>\r\n        <Form.Label style={{ color: \"white\" }}>{isLogin + \"'s\"}</Form.Label>\r\n        <Button variant=\"dark\" onClick={async() => {\r\n          var check = await axios.post(\"http://localhost:4000/mypage\", {\r\n            // userId: data.userId,\r\n            // userPw: data.userPw,\r\n            // userName: data.userName,\r\n            // userEmail: data.userEmail,\r\n            // userPhone: data.userPhone,\r\n            // userJob: data.userJob\r\n        });\r\n        if(check.data){\r\n          dispatchUserData({ type: \"setName\", userName: check.data })\r\n          dispatchUserData({ type: \"setJob\", userJob: \"master\" })\r\n          dispatchModal(\"openMP\")\r\n        }else{\r\n          alert(\"Can't find User data\")\r\n        }\r\n          }}>\r\n          My Page\r\n        </Button>\r\n        <Button variant=\"dark\" onClick={() => setLogin(false)}>\r\n          Log out\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">CNU Library</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#\">Home</Nav.Link>\r\n          <Nav.Link href=\"#\">about</Nav.Link>\r\n          <Nav.Link href=\"#\">Contact</Nav.Link>\r\n        </Nav>\r\n        {loginBtn}\r\n      </Navbar>\r\n\r\n      <Modal\r\n        show={modal.showMP}\r\n        onHide={() => dispatchModal(\"hideMP\")}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>My Page</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"validationCustom01\">\r\n                <Form.Label>ID</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"ID\"\r\n                  defaultValue={userData.userName}\r\n                  onInput={ref =>\r\n                    dispatchSU({ type: \"setId\", userId: ref.target.value })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"validationCustom02\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Password\"\r\n                  defaultValue={userData.userName}\r\n                  onInput={ref =>\r\n                    dispatchSU({ type: \"setPw\", userPw: ref.target.value })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"validationCustomUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    aria-describedby=\"inputGroupPrepend\"\r\n                    required\r\n                    defaultValue={userData.userName}\r\n                    onInput={ref =>\r\n                      dispatchSU({\r\n                        type: \"setName\",\r\n                        userName: ref.target.value\r\n                      })\r\n                    }\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please choose a username.\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"validationCustom03\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  defaultValue={userData.userName}\r\n                  onInput={ref =>\r\n                    dispatchSU({\r\n                      type: \"setEmail\",\r\n                      userEmail: ref.target.value\r\n                    })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a valid city.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationCustom04\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Phone\"\r\n                  required\r\n                  defaultValue={userData.userName}\r\n                  onInput={ref =>\r\n                    dispatchSU({\r\n                      type: \"setPhone\",\r\n                      userPhone: ref.target.value\r\n                    })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a valid state.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n                <Form.Label>Job</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={ref =>\r\n                    dispatchSU({ type: \"setJob\", userJob: ref.target.value })\r\n                  }\r\n                >\r\n                  <option>Bachelor</option>\r\n                  <option>Master</option>\r\n                  <option>Staff</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Button variant=\"secondary\" onClick={() => dispatchModal(\"hideSU\")}>\r\n              Close\r\n            </Button>\r\n            <Button type=\"submit\">Submit form</Button>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => dispatchModal(\"hideSI\")}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={async ref => {\r\n              if (SI.userId && SI.userPw) {\r\n                await SignIn(SI.userId, SI.userPw);\r\n              }\r\n              dispatchModal(\"hideSI\");\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={modal.showSI} onHide={() => dispatchModal(\"hideSI\")}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sign In</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>ID</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter ID\"\r\n                onInput={ref =>\r\n                  dispatchSI({ type: \"setId\", userId: ref.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onInput={ref =>\r\n                  dispatchSI({ type: \"setPw\", userPw: ref.target.value })\r\n                }\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => dispatchModal(\"hideSI\")}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={async ref => {\r\n              if (SI.userId && SI.userPw) {\r\n                await SignIn(SI.userId, SI.userPw);\r\n              }\r\n              dispatchModal(\"hideSI\");\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={modal.showSU} onHide={() => dispatchModal(\"hideSU\")}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sign Up</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"validationCustom01\">\r\n                <Form.Label>ID</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"ID\"\r\n                  onInput={ref =>\r\n                    dispatchSU({ type: \"setId\", userId: ref.target.value })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"validationCustom02\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  placeholder=\"Password\"\r\n                  onInput={ref =>\r\n                    dispatchSU({ type: \"setPw\", userPw: ref.target.value })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"validationCustomUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    aria-describedby=\"inputGroupPrepend\"\r\n                    required\r\n                    onInput={ref =>\r\n                      dispatchSU({\r\n                        type: \"setName\",\r\n                        userName: ref.target.value\r\n                      })\r\n                    }\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please choose a username.\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group as={Col} controlId=\"validationCustom03\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  onInput={ref =>\r\n                    dispatchSU({\r\n                      type: \"setEmail\",\r\n                      userEmail: ref.target.value\r\n                    })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a valid city.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationCustom04\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Phone\"\r\n                  required\r\n                  onInput={ref =>\r\n                    dispatchSU({\r\n                      type: \"setPhone\",\r\n                      userPhone: ref.target.value\r\n                    })\r\n                  }\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a valid state.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n                <Form.Label>Job</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={ref =>\r\n                    dispatchSU({ type: \"setJob\", userJob: ref.target.value })\r\n                  }\r\n                >\r\n                  <option>Bachelor</option>\r\n                  <option>Master</option>\r\n                  <option>Staff</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Button variant=\"secondary\" onClick={() => dispatchModal(\"hideSU\")}>\r\n              Close\r\n            </Button>\r\n            <Button type=\"submit\">Submit form</Button>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer></Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}